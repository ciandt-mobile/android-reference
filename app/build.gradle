apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        release {
            keyAlias 'AndroidReferenceKey'
            keyPassword ''
            storeFile file('../../keystores/android-reference.jks')
            storePassword ''
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ciandt.androidreference"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.ciandt.androidreference.AndroidReferenceRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            //debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
    }

    dataBinding {
        enabled = true
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    //Support
    implementation "com.android.support:appcompat-v7:$android_support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation "com.android.support:recyclerview-v7:$android_support_version"

    //Android Architecture Components
    implementation "android.arch.lifecycle:extensions:$arch_version"

    // Third part libraries
    api "com.squareup.retrofit2:retrofit:$retrofit_version"
    api "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlytics_version@aar") {
        transitive = true
    }

    // Unit testing
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'
    testImplementation "com.android.support.test:rules:$support_test_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    // UI testing
    androidTestImplementation "com.android.support.test:runner:$support_test_version"
    androidTestImplementation "com.android.support.test:rules:$support_test_version"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation "com.google.dagger:dagger:$dagger_version"
    androidTestImplementation "com.google.dagger:dagger-android:$dagger_version"
    androidTestImplementation "com.google.dagger:dagger-android-support:$dagger_android_support_version"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$dagger_android_support_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation 'com.github.tmurakami:dexopener:1.0.2'

    // Dependency injection
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_android_support_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_android_support_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
}
